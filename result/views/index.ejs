<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Agrega tus encabezados aquí según sea necesario -->
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tabla de Resultados</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      padding: 20px;
    }
  </style>
</head>
<body data-movie-scores='<%= JSON.stringify(movieScores || []) %>'>
  <h1 class="mt-4 mb-4">Tabla de Resultados</h1>
  <table class="table table-bordered">
    <thead class="table-light">
      <tr>
        <th>Usuario</th>
        <th>Matrix</th>
        <th>Dodgeball</th>
        <th>WWII</th>
      </tr>
    </thead>
    <tbody id="table-body">
      <% movieScores.forEach(entry => { %>
        <tr>
          <td><%= entry.usuario %></td>
          <td><%= entry.pelicula1 %></td>
          <td><%= entry.pelicula2 %></td>
          <td><%= entry.pelicula3 %></td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <div class="container">
    <h1 class="mt-4 mb-4">Calcular Distancia</h1>

    <form id="distanceForm">
        <div class="mb-3">
            <label for="user1" class="form-label">Usuario 1:</label>
            <select id="user1" name="user1" class="form-select"></select>
        </div>

        <div class="mb-3">
            <label for="user2" class="form-label">Usuario 2:</label>
            <select id="user2" name="user2" class="form-select"></select>
        </div>

        <div class="mb-3">
            <label for="distanceType" class="form-label">Tipo de Distancia:</label>
            <select id="distanceType" name="distanceType" class="form-select">
                <option value="manhattan">Manhattan</option>
                <option value="euclidean">Euclidiana</option>
            </select>
        </div>

        <button type="button" onclick="calculateDistance()" class="btn btn-primary">Calcular Distancia</button>
    </form>

    <div id="result" class="mt-4"></div>

  <!-- Resto del contenido según sea necesario -->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Agrega otros scripts según sea necesario -->
</body>
<script>
    // Función para obtener las calificaciones de películas de un usuario
    function getMovieRatings(usuario) {
      const userData = movieScores.find(entry => entry.usuario === usuario);
      if (userData) {
        return {
          pelicula1: parseInt(userData.pelicula1),
          pelicula2: parseInt(userData.pelicula2),
          pelicula3: parseInt(userData.pelicula3),
        };
      } else {
        return null; // Usuario no encontrado
      }
    }
  
    // Función para calcular la distancia de Manhattan entre dos usuarios
    function manhattanDistance(user1, user2) {
      const ratings1 = getMovieRatings(user1);
      const ratings2 = getMovieRatings(user2);
  
      if (!ratings1 || !ratings2) {
        return null; // Al menos un usuario no encontrado
      }
  
      const pel1 = Math.abs(ratings1.pelicula1 - ratings2.pelicula1);
      const pel2 = Math.abs(ratings1.pelicula2 - ratings2.pelicula2);
      const pel3 = Math.abs(ratings1.pelicula3 - ratings2.pelicula3);
  
      return Math.abs(pel1 + pel2 + pel3);
    }
  
    // Función para calcular la distancia euclidiana entre dos usuarios
    function euclideanDistance(user1, user2) {
      const ratings1 = getMovieRatings(user1);
      const ratings2 = getMovieRatings(user2);
  
      if (!ratings1 || !ratings2) {
        return null; // Al menos un usuario no encontrado
      }
  
      const pel1 = Math.pow((ratings1.pelicula1 - ratings2.pelicula1), 2);
      const pel2 = Math.pow((ratings1.pelicula2 - ratings2.pelicula2), 2);
      const pel3 = Math.pow((ratings1.pelicula3 - ratings2.pelicula3), 2);
  
      const squaredDifference = Math.pow((pel1 + pel2 + pel3), 1/2);
      return squaredDifference;
    }
  
    // Función para calcular la distancia y mostrar el resultado
    function calculateDistance() {
      const user1 = document.getElementById('user1').value;
      const user2 = document.getElementById('user2').value;
      const distanceType = document.getElementById('distanceType').value;
  
      // Calcula la distancia según el tipo seleccionado
      let distance;
      if (distanceType === 'manhattan') {
        distance = manhattanDistance(user1, user2);
      } else {
        distance = euclideanDistance(user1, user2);
      }
  
      distance = distance.toFixed(4);
      // Muestra el resultado
      const resultDiv = document.getElementById('result');
      resultDiv.innerHTML = `<p>Distancia ${distanceType} entre ${user1} y ${user2}: ${distance}</p>`;
    }

    var movieScores = JSON.parse(document.body.getAttribute('data-movie-scores'))

    function fillComboBoxes() {
        const userSelects = document.querySelectorAll('select[name^="user"]');
        console.log(movieScores);
        movieScores.forEach(entry => {
            userSelects.forEach(select => {
                const option = document.createElement('option');
                option.value = entry.usuario;
                option.text = entry.usuario;
                select.add(option);
            });
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        fillComboBoxes();
    });

  </script>
</html>
